{
  "hash": "3a336d403f8197572d0c20231b107747",
  "result": {
    "markdown": "---\ntitle: \"9. Predicting behaviour: The linear model\"\nsubtitle: Written by Rob Davies\norder: 10\n---\n\n::: {.cell}\n\n:::\n\n\n# Preparation\n\n## Lectures\n\n- [Part 1 - questions, assumptions, predictions](https://modules.lancaster.ac.uk/mod/panopto/view.php?id=2023165)\n- [Part 2 - linear models as prediction methods](https://modules.lancaster.ac.uk/mod/panopto/view.php?id=2023166)\n- [Part 3 - errors of prediction, residuals](https://modules.lancaster.ac.uk/mod/panopto/view.php?id=2023170)\n- [Part 4 - identifying and reporting model test information](https://modules.lancaster.ac.uk/mod/panopto/view.php?id=2023171)\n\n-- All slides are [here (html)](https://modules.lancaster.ac.uk/mod/resource/view.php?id=2023084), and [here (.docx)](data/PSYC401_wk9/401-linear-model-intro-printable.docx)\n\n-- Each part is about 15 minutes in length. I have labelled lectures so you know what is in each.\n\n- Work through the materials for the Practical below: this week introduces the linear model.\n\n- The motivation for providing you with a how-to and a workbook section is that you can learn and progress to do the practical work with more support (in the how-to) and then room to try things (in the workbook).\n\n- Attend the practical.\n\n- Test yourself using the [quiz (not assessed)](https://modules.lancaster.ac.uk/mod/quiz/view.php?id=1921465).\n\n- Optionally, if you can [give us your (anonymised) feedback](https://modules.lancaster.ac.uk/mod/feedback/view.php?id=2023259) on how the course is going from your perspective, that would be very welcome.\n\n# Part One: How To\n\n In Week 9, we aim to *further* develop skills in visualizing and testing the associations between variables in psychological data. In weeks 9-10, we do this in the context of working with the linear model\n\n We do this to learn how to answer research questions like:\n\n 1. What person attributes predict success in understanding?\n 2. Can people accurately evaluate whether they correctly understand written health information?\n  \n These kinds of research questions can often be answered through analyses using linear models. We will use linear models to estimate the association between predictors and outcomes\n\n When we do these analyses, we will need to think about how we report the results: we usually need to report information about the kind of model we specify; and we will need to report the nature of the association estimated in our model; we usually need to decide, is the association significant? does the association reflect a positive or negative relationship between outcome and predictor? is the association we see in our sample data relatively strong or weak?\n\n\n We will consolidate and extend learning on data visualization: \n-- Use histograms to examine the distributions of variables.\n-- Develop our capacity to edit the histograms\n-- Use scatterplots to examine the relationships we may observe or predict\n-- Develop our capacity to edit the scatterplots\n\n The idea is that as we work, we will develop skills in producing appealing plots for professional audiences \n\n## Task 1: Set-up \n\n1. Run this code to empty the R environment: `rm(list=ls())`                           \n\n\n2.  Run this code to load relevant libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"patchwork\")\nlibrary(\"tidyverse\")\n```\n:::\n\n\n\nIn this how-to guide, we use data from a 2020 study of the response of adults from a UK national sample to written health information: `study-one-general-participants.csv`\n\n\n## Task 2: Load data \n\n3.  Read in the data file we will be using: `study-one-general-participants.csv`. We use the `read_csv()` function to read the data file into R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy.one <- read_csv(\"study-one-general-participants.csv\")  \n```\n:::\n\n\n:::{.callout-important}\n  consolidate: there should be no surprises here \n:::\n\n4.  Inspect the data file. Use the `summary()` or `head()` functions to take a look\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(study.one)\nsummary(study.one)\n```\n:::\n\n\n- `head()` will give you the top few rows of any dataset you have read into R. `head(...)` is a function, and you put the name of the dataset inside the brackets to view it.\n\n- `summary()` will give you either descriptive statistics for variable columns classified as numeric\n or will tell you that columns in the dataset are not numeric. `summary()` is also a function and, again, you put the name of the dataset inside the brackets to view it\n\n\n## Task 3: Use histograms to examine the distributions of variables \n\n:::{.callout-important}\n  revision: practice to strengthen skills \n:::\n\n5.  Draw histograms to examine the distributions of variables. Use `ggplot()` with `geom_histogram()`\n\n- When we create a plot, we take things step-by-step\n- Here's an example: run the line of code and see the result in the Plots window in R-Studio\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = mean.acc)) + geom_histogram()\n```\n:::\n\n\n These are the steps:\n-- `ggplot(...)`  you tell R you want to make a plot using the `ggplot()` function\n-- `ggplot(data = study.one ...)`  you tell R you want to make a plot with the 'study.one' data\n-- `ggplot(..., aes(x = mean.acc))`  you tell R that you want to make a plot with the variable 'mean.acc'. Here, you specify the aesthetic mapping, `x = mean.acc`\n-- `ggplot(...) + geom_histogram()`  you tell R you want to plot values of 'mean.acc' as a histogram\n\n:::{.callout-important}\n  revision: make sure you are confident about doing these things \n:::\n\n6.  Practice editing the appearance of the plot step-by-step\n\n  If we break the plot code into steps, it will make it easier to read, and it will make it easier to add\n edits e.g.:\n \n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram()\n```\n:::\n\n\n\n  We are going to revise editing:\n-- the appearance of the bars using `binwidth =`\n-- the colour of the background using `theme_bw()`\n-- the appearance of the labels using `labs()`\n\n  Then we are going to try some new moves:\n-- setting the x-axis limits to reflect the full range of possible scores on the x-axis variable\n-- add annotation  here, a vertical line indicating the sample average for a variable\n\na.  the appearance of the bars using `binwidth`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 2)\n```\n:::\n\n\nb.  the colour of the background using `theme_bw()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 2) +\n  theme_bw()\n```\n:::\n\n\nc.  the appearance of the labels using `labs()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 2) +\n  theme_bw() +\n  labs(x = \"mean accuracy\", y = \"frequency count\")\n```\n:::\n\n\n\n:::{.callout-important}\n  introduce: make some new moves \n:::\n\nd. setting the x-axis limits using `x.lim()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 2) +\n  theme_bw() +\n  labs(x = \"Vocabulary (SHIPLEY)\", y = \"frequency count\") +\n  xlim(0,40)\n```\n:::\n\n\ne. add a vertical line to show the mean value\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 2) +\n  theme_bw() +\n  labs(x = \"Vocabulary (SHIPLEY)\", y = \"frequency count\") +\n  xlim(0,40) +\n  geom_vline(xintercept = mean(study.one$SHIPLEY), colour = \"red\", size = 1.5)\n```\n:::\n\n\n--  We can define the limits on the x-axis and on the y-axis. See ggplot reference information on setting limits [here](https://ggplot2.tidyverse.org/reference/lims.html)\n\n  It is often useful to do this:\n-- because we want to show the audience where the sample values are distributed compared to where they *could* be distributed, given the measure\n-- this makes sense e.g. if you want to see the relative age distribution of a sample compared to the population\n-- because we want plots, shown side by side to be directly comparable and because we want to give the audience a more accurate picture of the data\n\n:::{.callout-important}\n  revision: make sure you are confident about doing these things \n:::\n\n7.  Notice that we set the binwidth to 5: experiment and try different numbers. The binwidth number, if you are producing a histogram, will have to be a number larger than the potential minimum and smaller than the potential maximum for the variable you are plotting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 1) +\n  theme_bw() +\n  labs(x = \"Vocabulary (SHIPLEY)\", y = \"frequency count\")\n\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 2) +\n  theme_bw() +\n  labs(x = \"Vocabulary (SHIPLEY)\", y = \"frequency count\")\n\nggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 5) +\n  theme_bw() +\n  labs(x = \"Vocabulary (SHIPLEY)\", y = \"frequency count\")   \n```\n:::\n\n\nIn general, the larger (wider) the binwidth, the less detail you see about the distribution of values in the variable. Whether or not you want to present detail is then a question concerning your communication aims: do you want to give an impression, or identify a specific detail?\n\n  Notice that we used the `geom_vline()` in: `geom_vline(xintercept = mean(study.one$SHIPLEY), colour = \"red\", size = 1.5)` to plot a vertical line at the location on the x-axis we define.\n  \n  We do this in the steps:\n  1.  `geom_vline(...)`  draw a vertical line;\n  2.  `...xintercept...`  draw the line so it hits the x-axis (intercepts the x-axis);\n  3.  `...xintercept = mean(study.one$SHIPLEY...`  defined by the mean of the variable `mean(study.one$SHIPLEY)`\n  4.  `...colour = \"red\", size = 1.5...` make the line red and one and a half times the default thickness                              \n\n  The ggplot() reference information for this new geom is [here](https://ggplot2.tidyverse.org/reference/geom_abline.html)\n\n## Task 4: Use grids of histograms to examine the distributions of variables \n\n:::{.callout-important}\n  introduce: make some new moves \n:::\n\n  One of the convenient and powerful things about R plotting code is that you can create a series of plots and put them together in a grid of plots for easy comparison: we do that here\n\nWe will use the patchwork library: [check it out](https://patchwork.data-imaginist.com/articles/patchwork.html)\n\n8.  Create multiple plots and show them all together in a grid to allow comparison. We will need to do things in stages: (1.) make plots (2.) put them together\n\n\n- We are going to use the patchwork library to create the grids so you need to make sure you have already done this at the top of your script:\n \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"patchwork\")\nlibrary(\"tidyverse\")\n```\n:::\n\n\n\n- First make some plots: each time, assign the plot object a name, like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np.shipley <- ggplot(data = study.one, aes(x = SHIPLEY)) + \n  geom_histogram(binwidth = 2) +\n  theme_bw() +\n  labs(x = \"Vocabulary (SHIPLEY)\", y = \"frequency count\")   \n\np.mean.acc <- ggplot(data = study.one, aes(x = mean.acc)) + \n  geom_histogram(binwidth = 0.2) +\n  theme_bw() +\n  labs(x = \"Mean accuracy\", y = \"frequency count\") \n\np.age <- ggplot(data = study.one, aes(x = AGE)) + \n  geom_histogram(binwidth = 5) +\n  theme_bw() +\n  labs(x = \"Age (years)\", y = \"frequency count\") \n```\n:::\n\n\n  Notice the steps:\n  1.  `p.... <- ggplot(...)`  create a plot using `ggplot()`, give the plot a name\n  2.  `...x = ...`  define the x-axis variable (aesthetic) mapping\n  3.  `...binwidth = ...`  you may need to adjust the binwidth for each variable \n  4.  `...labs(x = )...`  and adjust the labels\n\n-- Then put the plots together in a grid to allow comparison of the distributions of the variables `p.shipley + p.mean.acc + p.age`\n\n  For this to work well, the plot window needs to be wide\n\n  Notice that presenting grids of plots is a powerful way to enable your audience to do efficient\n comparisons between variables or relationships\n  It is a common tactic in data visualization  in business, research and journalism  and\n is discussed in terms of visualizations with names like grids, lattices, trellises or small multiples\n\n  Notice also that we are doing something different here:\n  we create plot objects but do not show or print the plots out\n  in a separate move, we put the plot objects together in a grid of plots and show *that*.\n\n  This is a very powerful aspect of coding plots in R because it means you can create complex\n plots with multiple elements to communicate the message you need to communicate to your audience\n  Here, we are using this capacity to allow the audience to view and inspect the distributions of\n multiple different variables at the same time\n\n\n## Task 5. Now draw scatterplots to examine associations between variables \n\n:::{.callout-important}\n  consolidation: should be no surprises here \n:::\n\n9.  Create a scatterplot to examine the association between some variables. We are working with `geom_point()` and you need \n x and y aesthetic mappings\n \n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY, y = mean.acc)) +\n  geom_point()\n```\n:::\n\n \n  This plot shows: the possible association between x-axis variable 'SHIPLEY' and y-axis variable 'mean.acc'\n\nThe plot code moves through the following steps:  \n--  `ggplot(...)`  make a plot\n--  `ggplot(data = study.one, ...)`  with the 'study.one' dataset\n--  `ggplot(...aes(x = SHIPLEY, y = mean.acc))`  using two aesthetic mappings:`x = SHIPLEY`  map 'SHIPLEY' values to x-axis (horizontal, left to right) positions `y = mean.acc` map 'mean.acc' values to y-axis (vertical, bottom to top) positions\n-- `geom_point()`  show the mappings as points    \n  \n  \n10.  Now do scatterplots with any pair of numeric variables you like. Remember what we saw with `summary()`, not every variable consists of numbers  \n\n11.  Edit the appearance of the plot step-by-step\n\n  We are going to revising edits to:\n-- the appearance of the points using `alpha`, `size`, `shape`, and `colour`\n-- the colour of the background using `theme_bw()`\n-- the appearance of the labels using `labs()`\n\n  We are then going to try out some new moves:\n-- Set the x-axis and y-axis limits to the potential minimum-maximum ranges of the variables we plot. Here, \"potential\" references the fact that e.g. SHIPLEY scores can start at 0 (a person gets 0 responses correct) and has a maximum of 40 (a person could get all responses correct, for up to 40 items)\n\n\n-- the appearance of the points using `alpha`, `size`, `shape` and `colour`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY, y = mean.acc)) +\n  geom_point(alpha = 0.5, size = 2, colour = \"blue\", shape = 'square') \n```\n:::\n\n\n-- the colour of the background using `theme_bw()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY, y = mean.acc)) +\n  geom_point(alpha = 0.5, size = 2, colour = \"blue\", shape = 'square')   +\n  theme_bw()\n```\n:::\n\n\n-- the appearance of the labels using `labs()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY, y = mean.acc)) +\n  geom_point(alpha = 0.5, size = 2, colour = \"blue\", shape = 'square')   +\n  theme_bw() +\n  labs(x = \"SHIPLEY\", y = \"mean accuracy\")\n```\n:::\n\n\n:::{.callout-important}\n  introduce: make some new moves \n:::\n\n-- set the axis limits\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY, y = mean.acc)) +\n  geom_point(alpha = 0.5, size = 2, colour = \"blue\", shape = 'square')   +\n  theme_bw() +\n  labs(x = \"SHIPLEY\", y = \"mean accuracy\") +\n  xlim(0, 40) + ylim(0, 1)\n```\n:::\n\n\n\n  Notice that I set the x-axis limits to the minimum (0) and maximum (40) possible values for the `SHIPLEY` variable. I set the y-axis limits to the minimum (0) and maximum (1) possible values for the mean accuracy variable `mean.acc`\n\n\n  It is generally a good idea to show the minimum value (the origin) for each variable.\n  Not doing this i.e. showing a more narrow slice of the sample range is an easy way to \n exaggerate the strength of associations or to imply incorrectly the breadth in variation\n\n\n  You can change the transparency (`alpha`), `size`, `colour` and `shape` of important parts of a plot\n  Here, we are changing the appearance of the points.\n  But you can also change the transparency (`alpha`), `size`, `colour` and `shape` of reference lines added to a plot\n\n  The ggplot geom_point() reference information is [here](https://ggplot2.tidyverse.org/reference/geom_point.html) where you can see some examples of the edits we have done\n\n-- Some useful information about shape options is [here](http://www.cookbook-r.com/Graphs/Shapes_and_line_types/)\n-- Some useful information about shape options is [here](http://www.cookbook-r.com/Graphs/Colors_(ggplot2))\n\n  Now experiment!\n\n\n## Task 6: Use correlation to to answer the research questions \n\n:::{.callout-import}\n  revision: make sure you are confident about doing these things \n:::\n\n  One of our research questions is: What person attributes predict success in understanding?\n\n12.  Examine the correlation between mean accuracy (`mean.acc`) and vocabulary (`SHIPLEY`). We use `cor.test()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.test(study.one$SHIPLEY, study.one$mean.acc, method = \"pearson\",  alternative = \"two.sided\")\n```\n:::\n\n\nQ1.  What is r, the correlation coefficient?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\nr = 0.334406 \n:::\n\nQ2.  Is the correlation significant?\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\nr is significant, p < .05\n:::\n\nQ3.  What are the values for t and p for the significance test for the correlation?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\nt = 4.5855, p = 8.846e-06\n:::\n\nQ4.  What do you conclude is the answer to the research question, given the correlation results?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\nVocabulary and mean.acc are positively correlated suggesting that as SHIPLEY scores increase so also do mean.acc scores\n:::\n\n## Task 7: Use a linear model to to answer the research questions \n\n:::{.callout-important}\n  introduce: make some new moves \n:::\n\n  One of our research questions is: What person attributes predict success in understanding?\n\n13.  Examine the relation between outcome mean accuracy (mean.acc) and predictor vocabulary (SHIPLEY). We use `lm()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(mean.acc ~ SHIPLEY, data = study.one)\nsummary(model)\n```\n:::\n\n\nNotice that we do the linear model in the steps:\n\n-- `model <- lm(...)`  fit the model using `lm(...)`, give the model a name here, we call it \"model\"\n-- `...lm(mean.acc ~ SHIPLEY...)`  tell R you want a model of the outcome \n 'mean.acc' predicted (`~`) by the predictor 'SHIPLEY'\n-- `...data = study.one)`  tell R that the variables you name in the formula live in the 'study.one' dataset\n-- `summary(model)`  ask R for a summary of the model you called \"model\"\n\n Notice: R has a general formula syntax: outcome ~ predictor *or* y ~ x and uses the same format across a number of different functions each time, the left of the tilde symbol ~ is some output or outcome and the right of the tilde ~ is some input or predictor or set of predictors\n\nIf you look at the model summary you can answer the following questions  \n\nQ5.  What is the estimate for the coefficient of the effect of the predictor, SHIPLEY?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\n0.01050 \n:::\n\nQ6.  Is the effect significant?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\nIt is significant, p < .05\n:::\n\nQ7.  What are the values for t and p for the significance test for the coefficient?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\nt = 4.585, p = 8.85e-06\n:::\n\nQ8.  What do you conclude is the answer to the research question, given the linear model results?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\nThe model slope estimate suggests that as SHIPLEY scores increase so also do mean.acc scores\n:::\n\n## Task 8: Use a linear model to generate predictions \n\n:::{.callout-important}\n  introduce: make some new moves \n:::\n\n14.  We can use the model we have just fitted to plot the model predictions. We are going to draw a scatterplot and add a line showing the predictions, given the model intercept and effect coefficient estimates\n\nFirst fit a model and get a summary:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(mean.acc ~ SHIPLEY, data = study.one)\nsummary(model)\n```\n:::\n\n\nQ9.  What is the coefficient estimate for the intercept?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\n0.44914\n:::\n\nQ10.  What is the coefficient estimate for the slope of SHIPLEY?\n\n:::{.callout-warning icon=\"false\" collapse=\"true\"}\n## Answer\n0.01050\n:::\n\n  Second, use the `geom_abline()` function to draw the line:\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY, y = mean.acc)) +\n  geom_point(alpha = 0.5, size = 2, colour = \"blue\", shape = 'square')   +\n  geom_abline(intercept = 0.44914, slope = 0.01050, colour = \"red\", size = 1.5) +\n  theme_bw() +\n  labs(x = \"SHIPLEY\", y = \"mean accuracy\") +\n  xlim(0, 40) + ylim(0, 1)\n```\n:::\n\n\nYou can see that all we do is: add the geom_abline(...) function and in that, add information about the intercept and the slope. See reference information [here](https://ggplot2.tidyverse.org/reference/geom_abline.html)\n\nNote that we can get the prediction line drawn for us automatically, as:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.one, aes(x = SHIPLEY, y = mean.acc)) +\n   geom_point(alpha = 0.5, size = 2, colour = \"blue\", shape = 'square')   +\n  geom_smooth(method = 'lm', colour = \"purple\", alpha = .2, size = 2.5, se = FALSE) +\n  geom_abline(intercept = 0.44914, slope = 0.01050, colour = \"red\", size = 1) +\n  theme_bw() +\n  labs(x = \"SHIPLEY\", y = \"mean accuracy\") +\n  xlim(0, 40) + ylim(0, 1)  \n```\n:::\n\n\nHere, I turned the points off by commenting them out, adding  to the start of the line And I added geom_smooth(method = 'lm', ...) to draw a prediction line You can compare the red prediction line I drew using the model estimates with the purple line I used geom_smooth() to draw automatically to see that they are identical\n\n[This](https://ggplot2.tidyverse.org/reference/geom_smooth.html) shows you something of what geom_smooth() does. It is very useful:\n \n# Part Two: The Workbook\n\nIn Week 9, we aim to *further* develop skills in visualizing and testing the associations between variables in psychological data\n\nIn weeks 9-10, we do this in the context of working with the linear model\n\nWe do this to learn how to answer research questions like:\n\n 1. What person attributes predict success in understanding?\n 2. Can people accurately evaluate whether they correctly understand written health information?\n\n These kinds of research questions can often be answered through analyses using linear models\n  We will use linear models to estimate the association between predictors and outcomes\n\n\n When we do these analyses, we will need to think about how we report the results:  \n  we usually need to report information about the kind of model we specify;\n  and we will need to report the nature of the association estimated in our model;\n  we usually need to decide, is the association significant?\n  does the association reflect a positive or negative relationship between outcome \n and predictor?\n  is the association we see in our sample data relatively strong or weak?\n\n\n We will consolidate and extend learning on data visualization:\n  Use histograms to examine the distributions of variables\n  Develop our capacity to edit the histograms\n  Use scatterplots to examine the relationships we may observe or predict\n  Develop our capacity to edit the scatterplots\n\n The idea is that as we work, we will develop skills in producing appealing plots \n for professional audiences \n\n## Task 9: Set-up \n\n1.  Run this code to empty the R environment: `rm(list=ls())`                          \n\n2.  Run this code to load relevant libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"patchwork\")\nlibrary(\"tidyverse\")\n```\n:::\n\n\nIn this workbook, we use data from a second 2020 study of the response of adults from a UK national sample to written health information: `study-two-general-participants.csv`\n\n## Task 10: Load data \n\n3.  Read in the first data file we will be using: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy.two.gen <- read_csv(\"study-two-general-participants.csv\")\n```\n:::\n\n\n4.  Inspect the data file. Use the summary() or head() functions to take a look. Even though you have done this before, you will want to do it again, here, and pay particular attention to what you see, for the numeric variables, in the information about the `minimum (Min.)` and `maximum (Max.)` values for the variables\n\n\n## Task 11: Use histograms to examine the distributions of variables \n\n\n5.  Draw histograms to examine the distributions of variables. Use `ggplot()` with `geom_histogram()`\n\nWhen we create a plot, we take things step-by-step. Here's an example: run the line of code and see the result in the Plots window in R-Studio\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = study.two.gen, aes(x = mean.acc)) + geom_histogram()\n```\n:::\n\n\n\n6.  Practice editing the appearance of the plot step-by-step. Choose whichever numeric variable from the study.two.gen dataset you please. Use the line-by-line format to break the plot code into steps. it will make it easier to read, and it will make it easier to add edits e.g.\n\n\n  We are going to revise editing:\n-- the appearance of the bars using `binwidth`\n-- the colour of the background using `theme_bw()`\n-- the appearance of the labels using `labs()`\n\n  Then we are going to try some new moves:\n-- setting the x-axis limits to reflect the full range of possible scores on the x-axis variable\n-- add annotation  here, a vertical line indicating the sample average for a variable\n\nQ1.  Edit the appearance of the bars by specifying a `binwidth` value\n\nQ2.  Then add an edit to the appearance of the background using `theme_bw()`\n\nQ3.  Then add an edit to the appearance of the labels using `labs()`\n\nQ4.  Now add an edit by setting the x-axis limits using `x.lim()`\n\nQ5.  Then add an edit to draw a vertical line to show the mean value of the variable you are plotting\n\nQ6.  Can you find information on how to define the limits on the x-axis \n and on the y-axis?\n\n:::{.callout-note collapse=\"true\"}\n##Hint\nYou can see the information in this week's how-to but try a search online for \"ggplot reference xlim\"\n:::\n\nQ7.  Can you find information on how to a reference line?\n\n:::{.callout-note collapse=\"true\"}\n##Hint\nYou can see the information in this week's how-to but try a search online for \"ggplot reference vline\"\n:::\n\n\n\n7.  Does the `binwidth` value you are using for the histogram help you to see information about the distribution of values in the variable i.e. the general pattern (where is there a peak,  what skew etc.)? You probably need to try different values: the final value will be subjective, depending on your impression.\n\n \n\n## Task 12: Use grids of histograms to examine the distributions of variables \n\n8.  Create multiple plots showing the distributions of different variables and then plot them together in a grid to allow comparison between variables. We will need to do things in stages: first make plots, then put them together\n\n\nQ8.  Can you: \n\n  a. draw a histogram plot to show the distributions of the variables in the 'study.two.gen' dataset 'SHIPLEY' 'HLVA' and 'AGE' \n  b. assign a name to each plot object you create using `<-`. See example code in the how-to for how to do this. Give each plot a different name e.g. for the histogram for `SHIPLEY` scores, you could use the name `p.shipley` (p. for plot). When you create plots like this, they *will not* appear at first in the R-Studio Plots window, that happens when you do Q9.\n\n \nQ9.  Can you now put the plots together in a grid for comparison? See example code in the how-to for how to do this: you need to add the plots together using the names you gave them\n\n--  For this to work well, the plot window needs to be wide\n-- Notice that presenting grids of plots is a powerful way to enable your audience to do efficient comparisons between variables or relationships. It is a common tactic in data visualization  in business, research and journalism and is discussed in terms of visualizations with names like grids, lattices, trellises or small multiples.\n\n-- Notice also that we are doing something different here: we create plot objects but do not show or print the plots out in a separate move, we put the plot objects together in a grid of plots and show *that*\n\n-- This is a very powerful aspect of coding plots in R because it means you can create complex plots with multiple elements to communicate the message you need to communicate to your audience. Here, we are using this capacity to allow the audience to view and inspect the distributions of multiple different variables at the same time\n\n\n## Task 13: Now draw scatterplots to examine associations between variables \n\n\n9.  Create a scatterplot to examine the association between the outcome 'mean.acc' and each of three numeric potential predictor variables 'SHIPLEY' 'HLVA' and 'AGE'. We are working with `geom_point()` and you need x and y aesthetic mappings. The outcome variable 'mean.acc' has to be mapped to the y-axis using \"...y = ...\"\n\n\n10.  Edit the appearance of *each and every* plot step-by-step. You may want to use the same plot appearance choices for \n all plots because a consistent appearance is generally neater and easier for your audience to process. You can find links to reference information on colour and shape options in the how-to guide:\n \n-- use the information to make the plots pleasing in appearance to you. Do not be afraid to copy then paste code you re-use. But be careful that things like axis values are sensible for each variable\n\nQ10.  First, edit the appearance of the points using `alpha`, `size`, `shape`, and `colour`\n\nQ11.  Then edit the colour of the background using `theme_bw()`\n\nQ12.  Then edit the appearance of the labels using `labs()`\n\nQ13.  Then set the x-axis and y-axis limits to the minimum-maximum ranges of the variables you are plotting. For these plots the y-axis limits will be the same because the outcome stays the same. But the x-axis limits will be different for each different predictor variable. The minimum value will always be 0.\n\n11.  Make a grid of scatterplots so that you can compare the association between predictor and outcome variables for the different predictor variables you have been examining. As you did before with the histograms, first create a set of scatterplot objects, then produce a grid of the plots, adding each plot by name.\n\n12.  Now you have a grid of plots to look at: use it to compare the \n apparent association between the predictor and outcome variables under consideration here. I am going to ask some questions, next, that rely on your subjective impression given what you see in the plots. Do not worry that there is no \"right\" answer here. What we are doing is helping you to build experience so that you can develop an intuitive sense of patterns\n\nQ14.  Which predictor variables do or do not show an identifiable association with the outcome?\n\nQ15.  What do you see that leads you to this conclusion?\n\nQ16.  Refer back to the histograms you produced earlier: is there anything salient about the distributions you plotted that may be relevant, here, to your understanding of why you may or may not be able to identify an association between the outcome and any one of the predictor variables?\n\n## Task 14: Use correlation to to answer the research questions \n\n  One of our research questions is: What person attributes predict success in understanding?\n\n13.  Examine the correlations between the outcome variable and potential predictor variables. We have been drawing scatterplots to examine the associations between the outcome 'mean.acc' and each of the predictor variables 'SHIPLEY', 'HLVA' and 'AGE'. We will look at these variables 'SHIPLEY', 'HLVA' and 'AGE'. We use `cor.test()`. You need to run three separate correlations: \n-- between mean accuracy and SHIPLEY\n-- between mean accuracy and HLVA and \n-- between mean accuracy and AGE\n\nQ17.  What is r, the coefficient for the correlation between 'mean.acc' and 'SHIPLEY'?\n\nQ18.  Is the correlation between 'mean.acc' and 'HLVA'  significant?\n\nQ19.  What are the values for t and p for the significance test for the correlation between 'mean.acc' and 'AGE'?\n\nQ20.  For which pair of outcome-predictor variables is the correlation the largest?\n\nQ21.  What is the sign or direction of each of the correlations?\n\nQ22.  Some correlations will be larger than others: using what you see in the scatterplots, and what you saw in the histograms, can you offer an explanation in terms of the distribution of values, or the apparent pattern of scatterplot points for why some correlation coefficients are larger than others? Here, we are again seeking to train your intuitions\n\n\n## Task 15: Use a linear model to to answer the research questions \n\n  One of our research questions is: What person attributes predict success in understanding?\n\n14.  Examine the relation between outcome mean accuracy (mean.acc) and each of the predictors: 'SHIPLEY', 'HLVA' and 'AGE'. Use `lm()`. Run three separate `lm()` analyses, all with 'mean.acc' as the outcome but each with one predictor variable. See the how-to for example code that does what you need to do\n\n  Notice that we do the linear model in the steps:\n-- `model <- lm(...)`  fit the model using `lm()`, give the model a name here, we call it \"model\"\n-- `...lm(mean.acc ~ SHIPLEY...)`  tell R you want a model of the outcome 'mean.acc' predicted (`~`) by the predictor 'SHIPLEY'\n-- `...data = study.two.gen)`  tell R that the variables you name in the formula live in the 'study.two.gen' dataset\n-- `summary(model)`  ask R for a summary of the model you called \"model\"\n\nNotice that R has a general formula syntax: outcome ~ predictor *or* y ~ x and uses the same format across a number of different functions each time, the left of the tilde symbol ~ is some output or outcome and the right of the tilde ~ is some input or predictor or set of predictors\n\n  \nIf you look at the model summary you can answer the following questions  \n\nQ23.  What is the estimate for the coefficient of the effect of the predictor 'HLVA' on 'mean.acc'?\n\nQ24.  Is the effect significant?\n\nQ25.  What are the values for t and p for the significance test for the coefficient?\n\nQ26.  How would you describe in words the shape or direction of the association \n between 'HLVA' and 'mean.acc'?\n\nQ27.  How how would you describe the relations apparent between the predictor and \n outcome in all three models?\n\n \n## Task 16: Use a linear model to generate predictions \n\n15.  We can use the model we have just fitted to plot the model predictions. We are going to draw a scatterplot and add a line showing the predictions, given the model intercept and effect coefficient estimates. First fit a model and get a summary: model the relationship betweeen 'mean.acc' and 'HLVA'\n \nQ28.  What is the coefficient estimate for the intercept?\n\nQ29.  What is the coefficient estimate for the slope of HLVA (see earlier)?\n\n  Second, use the `geom_point()` to draw a scatterplot and `geom_abline()` function to draw the prediction line representing the association between this outcome and predictor\n\nSee reference information [here](https://ggplot2.tidyverse.org/reference/geom_abline.html)\n\n## Task 17: Optional extension:  Use community information to figure things out \n\n16.  Experienced users of R know that they can take advantage of the vast community resources that people post online, for free, to help others: use the ggplot reference line information you found in answer to Q.7 to work out how to draw a horizontal line in your plot hint: Task 16  In the how-to guide, you can see an example of how to draw a vertical line using geom_vline() where you set the position of the line by specifying an x-axis value. Here, you will need to look at the ggplot online information on drawing reference lines to find a code example for drawing a horizontal line. You will need to specify, now, a y-axis position and that position will need to make sense, given how the heights of the bars vary, for the variable you are using, in the plot you are developing e.g. something like. You will need to add a line of code, and \"make sense\" means: choose a number for the y-axis location of the line thatis larger than the minimum and smaller than the maximum of the heights of the bars in the plot\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}